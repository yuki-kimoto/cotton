package Cotton::App {
  use SPVM::Unicode;
  use SPVM::List;
  use Cotton::Interface;
  use Cotton::PaintInfo;
  use Cotton::Node;
  
  has name : rw string;
  has pages : rw SPVM::List;
  has runtime : rw object;
  has interface : rw Cotton::Interface;
  has current_page : rw Cotton::Page;
  
  sub new : Cotton::App() {
    my $self = new Cotton::App;
    
    $self->{interface} = Cotton::Interface->new;
    
    $self->{pages} = SPVM::List->new([]);
    
    return $self;
  }
  
  sub push_page : void ($self : self, $page : Cotton::Page) {
    $self->{pages}->push($page);
  }
  
  sub paint_nodes : void($self :self, $paint_info : Cotton::PaintInfo) {
    my $page = $self->current_page;
    
    my $node_list = SPVM::List->new([]);
    my $body = $page->body;

    {
      my $node = Cotton::Node->new;
      
      $node->{draw_left} = 300;
      $node->{draw_top} = 300;
      $node->{draw_width} = 400;
      $node->{draw_height} = 400;
      $node_list->push($node);
    }
    {
      my $node = Cotton::Node->new;
      $node->{draw_left} = 400;
      $node->{draw_top} = 400;
      $node->{draw_width} = 500;
      $node->{draw_height} = 500;
      $node_list->push($node);
    }
    
    # Drow node
    my $node_list_length = $node_list->length;
    for (my $i = 0; $i < $node_list_length; $i++) {
      warn("AAAAAAA");
      my $node = (Cotton::Node)$node_list->get($i);
      $self->interface->paint_node->($self, $paint_info, $node);
    }
  }
}
