class Cotton : precompile {
  use Cotton::Node;
  use List;
  use Cotton::Style::Color;
  use Encode;
  
  static method rgb : Cotton::Style::Color ($red : float, $green : float, $blue : float) {
    my $color = Cotton::Style::Color->new($red, $green, $blue, 1);
    return $color;
  }
  
  static method tag : Cotton::Node ($tag_name : string, $objects : object[]) {
    
    my $node = Cotton::Node->new;
    
    $node->{tag_name} = $tag_name;
    
    my $text_count = 0;
    
    my $child_nodes_list = List->new([]);
    
    my $objects_length = @$objects;
    for (my $i = 0; $i < $objects_length; $i++) {
      my $object = $objects->[$i];
      
      if ($object isa string) {
        if ($text_count > 0) {
          die "Specify only one text";
        }
        
        $node->{text}->push((string)$object);
        
        $text_count++;
      }
      elsif ($object isa Cotton::Node) {
        $child_nodes_list->push((Cotton::Node)$object);
      }
      else {
        die "Invalid argument";
      }
    }
    
    $node->{nodes} = $child_nodes_list;
    
    return $node;
  }
  
  static method body : Cotton::Node ($objects : object[]) {
    return &tag("body", $objects);
  }

  static method h1 : Cotton::Node ($objects : object[]) {
    return &tag("h1", $objects);
  }

  static method h2 : Cotton::Node ($objects : object[]) {
    return &tag("h2", $objects);
  }

  static method h3 : Cotton::Node ($objects : object[]) {
    return &tag("h3", $objects);
  }

  static method h4 : Cotton::Node ($objects : object[]) {
    return &tag("h4", $objects);
  }

  static method h5 : Cotton::Node ($objects : object[]) {
    return &tag("h5", $objects);
  }

  static method h6 : Cotton::Node ($objects : object[]) {
    return &tag("h6", $objects);
  }

  static method div : Cotton::Node ($objects : object[]) {
    return &tag("div", $objects);
  }
  
  static method span : Cotton::Node ($objects : object[]) {
    return &tag("span", $objects);
  }

  static method ul : Cotton::Node ($objects : object[]) {
    return &tag("ul", $objects);
  }

  static method ol : Cotton::Node ($objects : object[]) {
    return &tag("ol", $objects);
  }

  static method li : Cotton::Node ($objects : object[]) {
    return &tag("li", $objects);
  }
  static method a : Cotton::Node ($objects : object[]) {
    return &tag("a", $objects);
  }
  
}
