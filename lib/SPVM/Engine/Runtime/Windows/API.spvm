class Engine::Runtime::Windows::API {
  interface Engine::API;
  
  use Engine::App;
  use Eg::Node;
  
  has engine : rw Engine::Runtime::Engine::Win;
  has runtime : rw Engine::Runtime;
  
  static method new : Engine::Runtime::Windows::API () {
    
    my $win = new Engine::Runtime::Windows::API;
    
    return $win;
  }
  
  method get_viewport_height : int () {
    
    my $engine = $self->engine;
    
    return $engine->get_viewport_height;
  }
  
  method get_viewport_width : int () {
    
    my $engine = $self->engine;
    
    return $engine->get_viewport_width;
  }
  
  method paint_node : void ($paint_info : object, $node : Eg::Node) {
    
    my $engine = $self->engine;
    
    $engine->paint_node($paint_info, $node);
  }
  
  method calc_text_height : int ($paint_info : Engine::PaintInfo, $text : string, $width : int, $font_styles : string[]) {
    my $engine = $self->engine;
    
    return $engine->calc_text_height($paint_info, $text, $width, $font_styles);
  }
  
  method run : void () {
    
    my $engine = $self->engine;
    
    $engine->run;
  }
}
