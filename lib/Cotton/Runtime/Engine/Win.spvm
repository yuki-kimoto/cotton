package Cotton::Runtime::Engine::Win {
  use SPVM::Unicode;
  use SPVM::List;
  use Cotton::App;
  use Cotton::Runtime::Engine::Win::WindowHandle;
  
  has app : rw Cotton::App;
  has runtime : rw Cotton::Runtime;
  has window_handle : Cotton::Runtime::Engine::Win::WindowHandle;
  
  sub new : Cotton::Runtime::Engine::Win($options : object[]) {
    my $self = new Cotton::Runtime::Engine::Win;
    
    return $self;
  }
  
  sub setup_runtime : void ($self : self, $runtime : Cotton::Runtime) {
    
    my $engine = $self;
    $runtime->interface->set_paint_node([$engine : Cotton::Runtime::Engine::Win] sub : void ($self: self, $paint_info : object, $node : Cotton::Node) {
      $engine->paint_node($paint_info, $node);
    });
    
    $runtime->interface->set_get_viewport_width([$engine : Cotton::Runtime::Engine::Win] sub : int ($self: self) {
      return $engine->get_viewport_width;
    });
    
    $runtime->interface->set_get_viewport_height([$engine : Cotton::Runtime::Engine::Win] sub : int ($self: self) {
      return $engine->get_viewport_height;
    });

    $runtime->interface->set_run_app([$runtime : Cotton::Runtime, $engine : Cotton::Runtime::Engine::Win] sub : void ($self: self, $app : Cotton::App) {
      $runtime->set_app($app);
      
      $engine->set_runtime($runtime);
      $engine->set_app($app);
      
      $engine->create_main_window;
      
      $engine->run;
    });
  }

  native sub create_main_window : void ($self : self);
  
  native sub paint_node : void ($self : self, $paint_info : object, $node : Cotton::Node);

  native sub get_viewport_width : int ($self : self);

  native sub get_viewport_height : int ($self : self);
  
  native sub run : void ($self : self);
}
