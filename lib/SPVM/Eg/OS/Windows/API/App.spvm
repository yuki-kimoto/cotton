class Eg::OS::Windows::API::App extends Eg::OS::API {
  
  use List;
  use Encode;
  use Eg::Window;
  use Eg::Node;
  use Hash;
  
  use Eg::Layout::Box;
  
  use Eg::OS::Windows::WindowHandle;
  use Eg::OS::Windows::PaintInfo;
  
  static method new : Eg::OS::Windows::API::App($runtime : Eg::Runtime) {
    
    my $self = new Eg::OS::Windows::API::App;
    
    $self->{runtime} = $runtime;
    
    return $self;
  }
  
  method open_main_window : void ($options : object[] = undef) {
    
    my $options_h = Hash->new($options);
    
    my $left = $options_h->get_or_default_int("left", &CW_USEDEFAULT);
    
    my $top = $options_h->get_or_default_int("top", &CW_USEDEFAULT);
    
    my $width = $options_h->get_or_default_int("width", &CW_USEDEFAULT);
    
    my $height = $options_h->get_or_default_int("height", &CW_USEDEFAULT);
    
    warn dump [$left, $top, $width, $height];
    
    $self->open_main_window_native($left, $top, $width, $height);
  }
  
  native method open_main_window_native : void ($left : int, $top : int, $width : int, $height : int);
  
  native method start_event_loop : void ();
  
  private method paint_nodes : void ($paint_info : object) {
    
    my $runtime = $self->{runtime};
    
    my $window = $runtime->window;
    
    {
      my $html = $window->document->document_element;
      
      my $body = $window->document->body;
      
      my $nodes = [(Eg::Node)
        $body,
        (Eg::Node)$body->child_nodes->[0],
        $body->child_nodes->[0]->(Eg::Node)->child_nodes->[0]->(Eg::Node),
        $body->child_nodes->[1]->(Eg::Node),
        $body->child_nodes->[2]->(Eg::Node),
      ];
      for (my $i = 0; $i < @$nodes; $i++) {
        my $node = $nodes->[$i];
        
        unless ($node->node_type == Eg::Node->TYPE_TEXT_NODE) {
          $self->paint_node($paint_info, $node);
        }
      }
    }
  }
  
  private native method paint_node : void ($paint_info : object, $node : Eg::Node);
  
  private native static method CW_USEDEFAULT : int ();
  
  private method inner_width : int () {
    return $self->{runtime}->api->window->inner_width;
  }
  
  private method document_title : string () {
    return $self->{runtime}->window->document->title;
  }
}
