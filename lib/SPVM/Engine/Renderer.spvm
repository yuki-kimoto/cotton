class Engine::Renderer {
  use Engine::App;
  use Engine::Runtime;
  use Fn;
  use Sort;
  
  static method rgb : Eg::Style::Color ($red : float, $green : float, $blue : float) {
    my $color = Eg::Style::Color->new($red, $green, $blue, 1);
    return $color;
  }
  
  static method new : Engine::Renderer () {
    return new Engine::Renderer;
  }
  
  method repaint : void($app : Engine::App, $paint_info : Engine::Runtime::Windows::PaintInfo) {
    
    my $runtime = $app->runtime;
    
    my $viewport_width = $runtime->api->get_viewport_width();
    my $viewport_height = $runtime->api->get_viewport_height();
    
    {
      my $body = $app->index_document;
      
      $body->{draw_left} = 0;
      $body->{draw_top} = 0;
      $body->{draw_width} = $viewport_width;
      
      my $nodes = [$body, (Eg::Node)$body->nodes->get(0), $body->nodes->get(0)->(Eg::Node)->nodes->get(0)->(Eg::Node)];
      for (my $i = 0; $i < @$nodes; $i++) {
        my $node = $nodes->[$i];
        $node->{draw_left} = 0;
        $node->{draw_top} = 0;
        $node->{draw_width} = $viewport_width;
        
        my $text_string = (string)undef;
        if ($node->{text_buffer}) {
          $text_string = $node->{text_buffer}->to_string;
        }
        
        my $draw_height = $runtime->api->calc_text_height($paint_info, $text_string, $viewport_width, undef);
        
        $node->{draw_height} = $draw_height;
        
        $runtime->api->paint_node($paint_info, $node);
      }
    }
    
    {
      my $node_list = List->new([]);
      {
        my $node = Eg->div_({style => {left => "300px", top => "500px", width => "400px", height => "400px", "background-color" => "0xFF0000"}});
        
        $node->{draw_left} = 300;
        $node->{draw_top} = 500;
        $node->{draw_width} = 400;
        $node->{draw_height} = 400;
        
        $node_list->push($node);
        
        $node->set_background_color(&rgb(0xFF, 0x00, 0x00));
      }
      {
        my $node = Eg->div_({style => {left => "400px", top => "600px", width => "500px", height => "500px", "background-color" => "0xFF0000"}});
        
        $node->{draw_left} = 400;
        $node->{draw_top} = 600;
        $node->{draw_width} = 500;
        $node->{draw_height} = 500;
        $node_list->push($node);
        $node->set_background_color(&rgb(0xFF, 0x00, 0x00));
      }
      
      # Drow node
      my $node_list_length = $node_list->length;
      for (my $i = 0; $i < $node_list_length; $i++) {
        my $node = (Eg::Node)$node_list->get($i);
        $runtime->api->paint_node($paint_info, $node);
      }
    }
  }
}
